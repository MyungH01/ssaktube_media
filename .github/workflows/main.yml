name: Deploy to ECR

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build and Push Image to ECR
    runs-on: ubuntu-latest

    steps:
    # 현재 저장소의 코드를 복사
    - name: Check out code
      uses: actions/checkout@v4
		
		# secrets에 저장한 env 값을 .env파일로 생성하기 위해 작성
    - name: Create .env file
      run: |
        echo "REGION=${{ secrets.REGION }}" >> .env
        echo "USER_POOL_ID=${{ secrets.USER_POOL_ID }}" >> .env
        echo "IDENTITY_POOL_ID=${{ secrets.IDENTITY_POOL_ID }}" >> .env
        echo "RECORDING_CONFIGURATION_ARN=${{ secrets.RECORDING_CONFIGURATION_ARN }}" >> .env
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
        echo "BASE_ARN=${{ secrets.BASE_ARN }}" >> .env
        echo "ACCESS_KEY=${{ secrets.ACCESS_KEY }}" >> .env
        echo "SECRET_ACCESS_KEY=${{ secrets.SECRET_ACCESS_KEY }}" >> .env
        echo "REGION=${{ secrets.REGION }}" >> .env
       
		# AWS 서비스에 접근하기 위한 크리덴셜을 설정
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.REGION }}
        
		# ECR에 로그인하기 위한 패스워드를 가져와서 도커 로그인
    - name: Get ECR login password
      run: |
        echo "$(aws ecr get-login-password --region ${{ secrets.REGION }})" | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
		
		
    - name: Build, tag, and push image to Amazon ECR
      run: |
        IMAGE_TAG=${{ github.run_number }}
        LATEST_TAG=latest
        IMAGE_REPO=${{ secrets.IMAGE_REPO }}
        ECR_REGISTRY=${{ secrets.ECR_REGISTRY }}
        docker build -t $IMAGE_REPO:$IMAGE_TAG .
        docker tag $IMAGE_REPO:$IMAGE_TAG $ECR_REGISTRY/$IMAGE_REPO:$IMAGE_TAG
        docker push $ECR_REGISTRY/$IMAGE_REPO:$IMAGE_TAG
		    
		    # 최신 이미지 참조 하기 위해 동일한 이미지에 "latest" 태그를 추가   
        docker tag $IMAGE_REPO:$IMAGE_TAG $ECR_REGISTRY/$IMAGE_REPO:$LATEST_TAG
        docker push $ECR_REGISTRY/$IMAGE_REPO:$LATEST_TAG 
        
